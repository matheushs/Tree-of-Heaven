<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize IVals
global.gamespeed = 1.0
global.debug_level = 0;

initialize_switches();

global.go_left_button  = ord('A');//vk_left;
global.go_right_button = ord('D');//vk_right;
global.go_up_button    = ord('W');//vk_up;
global.go_down_button  = ord('S');//vk_down;
global.interaction_button = vk_space;//ord('Z');
global.text_skip_button = vk_space;//ord('Z');

global.ARRAYS_DOWNRIGHT = 0;
global.ARRAYS_DOWNLEFT  = 1;
global.ARRAYS_UPRIGHT   = 2;
global.ARRAYS_UPLEFT    = 3;

global.GOING_LEFT = -1;
global.GOING_RIGHT = 1;
global.GOING_UP = -2;
global.GOING_DOWN = 2;

global.item_on_hand = 0;

music_playing = -1;

can_play_song = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Song
can_play_song = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control music
if(can_play_song){
    musics[0,0] = "in_menu";
    musics[0,1] = snd_title;

    musics[1,0] = "intro";
    musics[1,1] = snd_alarm;
    
    musics[2,0] = "woke_up_ai";
    musics[2,1] = snd_bgm1;
    
    musics[3,0] = "started_emergency_drill";
    musics[3,1] = snd_alarm;
    
    musics[4,0] = "stopped_alarm";
    musics[4,1] = snd_bgm1;
    
    musics[5,0] = "realized_gone_everywhere";
    musics[5,1] = snd_creepy;
    
    musics[6,0] = "bad_route_opened_door";
    musics[6,1] = snd_alarm;
    
    musics[7,0] = "is_in_good_end_route";
    musics[7,1] = snd_bgm1;
    
    musics[8,0] = "end";
    musics[8,1] = snd_title;
    
    var found_music = false;
    
    for(var i = 9 - 1; i &gt; 0; i--){
        if(get_switch(musics[i, 0])){  
            if(musics[i, 1] == -1){
                audio_sound_gain(musics[i-1, 1], 0, 1000);
            }else if(!audio_is_playing(musics[i, 1])){
                for(var j = 0; j &lt; i; j++){
                    audio_sound_gain(musics[j, 1], 0, 1000);
                }
                
                audio_play_sound(musics[i, 1], 21, true);
                audio_sound_gain(musics[i, 1], 0, 0);
                audio_sound_gain(musics[i, 1], 1, 2000);
                
                music_playing = musics[i, 1];
            }else if(audio_sound_get_gain(musics[i, 1]) == 0){
                for(var j = 0; j &lt; i; j++){
                    audio_sound_gain(musics[j, 1], 0, 1000);
                }
                
                audio_sound_gain(musics[i, 1], 1, 2000);
                
                music_playing = musics[i, 1];
            }
            found_music = true;
            break;
        }
    }
    
    if(!found_music){
        if(get_switch(musics[0, 0]) &amp;&amp; !audio_is_playing(musics[0, 1])){
            audio_play_sound(musics[0, 1], 21, true);
            audio_sound_gain(musics[0, 1], 0, 0);
            audio_sound_gain(musics[0, 1], 1, 2000);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creates or destorys Inventory

var name_room = room_get_name(room);
if(name_room == room_get_name(rm_TitleScreen)){
    if(instance_exists(Inventory)){
        with(instance_find(Inventory, 0)){
            instance_destroy();
        }
    }
}else{
    if(!instance_exists(Inventory)){
        instance_create(0, 0, Inventory);
    }
}

InteractablesController.is_hovering_an_interactable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Fullscreen
window_set_fullscreen(!window_get_fullscreen()); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file_delete("save.ini")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Loading Game
load_game();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Saving Game
save_game();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to Menu

if(room != rm_TitleScreen &amp;&amp; 
   EventController.last_block_done &amp;&amp; 
   !EventController.block_new_events){
    if(room == GameMenu){
        room_goto(global.last_room);
        Inventory.visible = true;
    }else{
        global.last_room = room;
        room_goto(GameMenu);
        Inventory.visible = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
