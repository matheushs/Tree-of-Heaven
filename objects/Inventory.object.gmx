<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_InventoryBar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize position

depth = -1000;

image_xscale = window_get_width() / sprite_width;
image_yscale = image_xscale;

zero_x = - (window_get_width() - sprite_width * 0.05);

x = zero_x;
y = window_get_height() - sprite_height;

mouse_is_hovering = false;
move_speed = 50;

visible = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize IVals
max_itens = 13

h_margin = 22;
v_margin = 3;
h_gap = 2;
height_of_item = 44
width_of_item = 44

for(var i = 0; i &lt; max_itens; i++){
    itens[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control Inventory Location

if(visible){
    if(mouse_is_hovering){
        x = clamp(x + move_speed, zero_x, 0);
    }else{
        x = clamp(x - move_speed, zero_x, 0);
    }
}else{
    x = zero_x;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Realease Item
global.item_on_hand = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Untriggers Mouse Hover
mouse_is_hovering = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Triggers Mouse Hover
mouse_is_hovering = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grab item if has nothing, interacts otherwise
for(var i = 0; i &lt; array_length_1d(itens); i++){
    if(itens[i] != 0){
        var x_to_search = x + (h_margin + width_of_item*i + h_gap*i) * image_xscale;
        var y_to_search = y + v_margin * image_yscale;
        
        var sprite_to_search = object_get_sprite(itens[i].object_index)
        var width_to_search = width_of_item * image_xscale;
        var height_to_search = height_of_item * image_yscale;
        
        if(x_to_search &lt; mouse_x &amp;&amp; mouse_x &lt; x_to_search + width_to_search){
            if(y_to_search &lt; mouse_y &amp;&amp; mouse_y &lt; y_to_search + height_to_search){
                
                if(global.item_on_hand != 0){
                    with(itens[i]){
                        event_user(1);
                    }
                }else{
                    global.item_on_hand = itens[i];
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing Inventory Bar
draw_self();

for(var i = 0; i &lt; array_length_1d(itens); i++){
    if(itens[i] != 0){
        var x_to_draw = x + (h_margin + width_of_item*i + h_gap*i) * image_xscale;
        var y_to_draw = y + v_margin * image_yscale;
        
        var sprite_to_draw = object_get_sprite(itens[i].object_index)
        var xscale_to_draw = (width_of_item / sprite_get_width(sprite_to_draw)) * image_xscale;
        var yscale_to_draw = (height_of_item / sprite_get_height(sprite_to_draw)) * image_yscale;
        
        draw_sprite_ext(sprite_to_draw, 0, x_to_draw, y_to_draw, xscale_to_draw, yscale_to_draw, 0, c_white, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing Item on hand

if(global.item_on_hand != 0){
    var x_to_draw = mouse_x;
    var y_to_draw = mouse_y;
    
    var sprite_to_draw = object_get_sprite(global.item_on_hand.object_index)
    var xscale_to_draw = (width_of_item / sprite_get_width(sprite_to_draw)) * image_xscale;
    var yscale_to_draw = (height_of_item / sprite_get_height(sprite_to_draw)) * image_yscale;
        
    draw_sprite_ext(sprite_to_draw, 0, x_to_draw, y_to_draw, xscale_to_draw, yscale_to_draw, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
