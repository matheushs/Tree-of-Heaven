<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_event</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calls Parent Create
event_inherited();
blocks_hero = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
alpha = 1;
print = "";
time = 0;
depth = -1000000;

color = c_white;

skip_beats = 0;

last_played = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Showing Message
visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add letters over time
if (time &lt; text_length)
{   
    if(skip_beats &lt;= 0){
        time += spd;
        
        var aux = string_copy(text,0,time);
        var aux_len = string_length(aux);
        var aux_last_char = string_char_at(aux,aux_len);
        
        var semi_string = string_delete(aux, 1, string_length(print));
        
        pos[0] = string_pos(".", semi_string);
        pos[1] = string_pos("?", semi_string);
        pos[2] = string_pos("!", semi_string);
        pos[3] = string_pos(":", semi_string);
        pos[4] = string_pos(",", semi_string);
        
        var min_i = 100000;
        for(var i = 0; i &lt; array_length_1d(pos); i++){
            if(pos[i] != 0 &amp;&amp; pos[i] &lt; min_i){
                min_i = pos[i];
            }
        }
        
        if(min_i != 100000){
            time = string_length(print) + min_i;
        }
        
        if(string_char_at(text, string_length(aux) + 1) == '"' ||
           string_char_at(text, string_length(aux) + 1) == "'"){
               time += 1;
        }
        
        aux = string_copy(text,0,time);
        aux_len = string_length(aux);
        aux_last_char = string_char_at(aux,aux_len);
        
        if(aux_len != string_length(print) &amp;&amp; 
           aux_last_char != ' ' &amp;&amp;
           time - last_played &gt;= 2){
            audio_play_sound(sound, 9, false);
            last_played = time;
        }
        
        if(aux_last_char == ','){
            skip_beats = 12;
        }else if(aux_last_char == '.' || 
                 aux_last_char == '!' ||
                 aux_last_char == '?' ||
                 aux_last_char == ':' ){
            skip_beats = 24;
        }
        
        print = aux;
    }else{
        skip_beats -= spd;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Render textbox &amp; text
draw_set_alpha(alpha);

draw_set_font(font);
//Drawing Border
draw_set_color(c_white);
draw_rectangle(x + view_xview[0],y + view_yview[0] ,x + view_xview[0] + boxwidth,y + view_yview[0] + boxheight,0);
//Drawing Black Box
draw_set_color(c_black);
draw_rectangle(x + view_xview[0] + 6,y + view_yview[0] + 6,x + view_xview[0] + boxwidth - 6,y + view_yview[0] + boxheight - 6,0);

draw_set_color(color);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_ext
(
    x + view_xview[0] + h_padding,
    y + view_yview[0] + v_padding,
    print,
    font_get_size(font) + line_space,
    maxlength
);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Destruction
if(keyboard_check_pressed(global.interaction_button)){
    if(visible &amp;&amp; time &gt;= text_length){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Text Skip
if(keyboard_check_pressed(global.text_skip_button)){
    if(visible &amp;&amp; time &lt; text_length){
        if(sound != -1){
            audio_play_sound(sound, 10, 0);
            audio_play_sound(sound, 10, 0);
            audio_play_sound(sound, 10, 0);
        }
        time = text_length;
        print = text;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
